import Head from 'next/head'
import Banner from '@/src/components/Banner/Banner'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import Card from '@/src/components/Card/Card'
import coffeeStoresData from "../data/coffee-stores.json"
import { FetchCoffeeStores } from '@/lib/coffe-stores'
import useTrackLocation from '@/hooks/useTrackLocation'
import { useEffect, useState } from 'react'


export async function getStaticProps(context) {

  const coffeeStores = await FetchCoffeeStores();

  return {
    props: {
      coffeeStores,
    },
  }
}

/* start of component */

export default function Home({ coffeeStores }) {

  /* aquire user location and return coordinates  */
  const {
    handleTrackLocation, latLong, locationErrorMsg, isFindingLocation
  } = useTrackLocation();
  

  const [userCoffeeStores, setUserCoffeeStores] = useState([]);
  const [userCoffeeStoresError, setUserCoffeeStoresError] = useState(null);



  useEffect(() => {
    /* Aquire a list of sotres and images based on users location */
    async function setCoffeStoresByLocation() {

      if (latLong) {
        try {
          const fetchedCoffeeeStores = await FetchCoffeeStores(latLong, 12);
          console.log({ fetchedCoffeeeStores, latLong })
          setUserCoffeeStores(fetchedCoffeeeStores)
        }
        catch (error) {
          console.log(error);
          setUserCoffeeStoresError(error.message)
        }
      }

    }

    setCoffeStoresByLocation();

  }, [latLong])



  function handleOnBannerBtnClick() {
    console.warn("IT WORKS")
    handleTrackLocation();
    
  }

  /* Start of JSX */

  return (
    <div className={styles.sectionWrapper}>

      <Head>
        <title>Coffe Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main className={styles.main}>

        {/* Hero start */}

        <Banner
          buttonText={
            isFindingLocation ? "Locating..." : "View Stores Nearby"
          }
          handleOnBannerBtnClick={handleOnBannerBtnClick}
        />

            {/* Error feedback start */}

        {
          locationErrorMsg ?
            <p className={styles.errorMsg}
            >Something went wrong: {locationErrorMsg}</p>
            : null
        }

        {
          userCoffeeStoresError ?
            <p className={styles.errorMsg}
            >Something went wrong: {userCoffeeStoresError}</p>
            : null
        }

            {/* Error feedback end */}

        <div className={styles.heroImage}>
          <Image
            alt="coffe conoseiur banner"
            src="/images/hero-image.png"
            width={700} height={400}
          />
        </div>

        {/* Hero end */}

        {/* User aquired coffe stores start */}

        {userCoffeeStores.length > 0
          ?
          <>
            <h2 className={styles.heading2}>Stores Near You</h2>
            <div className={styles.cardLayout}>
              {
                userCoffeeStores.map(store => (
                  <Card
                    key={store.id}
                    name={store.name}
                    imgUrl={store.imgUrl}
                    href={`/coffee-store/${store.id}`} />
                ))
              }
            </div>
          </>
          :
          null}

        {/* User aquired coffe stores end */}

        {/* Default coffe stores start */}

        {coffeeStores.length > 0
          ?
          <>
            <h2 className={styles.heading2}>San Deigo Stores</h2>
            <div className={styles.cardLayout}>
              {
                coffeeStores.map(store => (
                  <Card
                    key={store.id}
                    name={store.name}
                    imgUrl={store.imgUrl}
                    href={`/coffee-store/${store.id}`} />
                ))
              }
            </div>
          </>
          :
          null}

        {/* Default coffe stores end */}

      </main>

    </div>
  )  /* end of JSX */
}

/* end of component */